# Generated by Django 3.1.5 on 2021-02-01 02:46

import django.core.validators
from django.db import migrations, models
import simple_history.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AffiliateImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_tag', models.CharField(max_length=50, verbose_name='Alt Tag')),
                ('caption', models.TextField(max_length=100, verbose_name='Caption')),
            ],
            options={
                'verbose_name': 'Affiliate Image',
                'verbose_name_plural': 'Affiliate Images',
            },
        ),
        migrations.CreateModel(
            name='AffiliateLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('follow', models.CharField(choices=[('NF', 'No Follow'), ('DF', 'Do Follow')], max_length=10, verbose_name='Follow')),
                ('link', models.URLField(max_length=500, verbose_name='Link')),
                ('anchor_text', models.CharField(max_length=30, verbose_name='Anchor Text')),
                ('affiliate_tag', models.CharField(max_length=20, verbose_name='Affiliate Tag')),
            ],
            options={
                'verbose_name': 'Affiliate Link',
                'verbose_name_plural': 'Affiliate Links',
            },
        ),
        migrations.CreateModel(
            name='AffiliateProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('content', tinymce.models.HTMLField()),
                ('sku_asin', models.CharField(max_length=50, verbose_name='Sku or Asin')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Currency')),
                ('brand', models.CharField(max_length=20, verbose_name='Brand')),
                ('manufacturer', models.CharField(max_length=20, verbose_name='Manufacturer')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
            ],
            options={
                'verbose_name': 'Affiliate Product',
                'verbose_name_plural': 'Affiliate Products',
            },
        ),
        migrations.CreateModel(
            name='AffiliateProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Affiliate Program',
                'verbose_name_plural': 'Affiliate Programs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AffiliateTag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=20, verbose_name='Tag')),
            ],
            options={
                'verbose_name': 'Affiliate Tag',
                'verbose_name_plural': 'Affiliate Tags',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalAffiliateImage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('alt_tag', models.CharField(max_length=50, verbose_name='Alt Tag')),
                ('caption', models.TextField(max_length=100, verbose_name='Caption')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Affiliate Image',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAffiliateLink',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('follow', models.CharField(choices=[('NF', 'No Follow'), ('DF', 'Do Follow')], max_length=10, verbose_name='Follow')),
                ('link', models.URLField(max_length=500, verbose_name='Link')),
                ('anchor_text', models.CharField(max_length=30, verbose_name='Anchor Text')),
                ('affiliate_tag', models.CharField(max_length=20, verbose_name='Affiliate Tag')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Affiliate Link',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAffiliateProduct',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('content', tinymce.models.HTMLField()),
                ('sku_asin', models.CharField(max_length=50, verbose_name='Sku or Asin')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Currency')),
                ('brand', models.CharField(max_length=20, verbose_name='Brand')),
                ('manufacturer', models.CharField(max_length=20, verbose_name='Manufacturer')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Affiliate Product',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAffiliateProgram',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Affiliate Program',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAffiliateTag',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('tag', models.CharField(max_length=20, verbose_name='Tag')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Affiliate Tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Category',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInfoPost',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Info Post',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalInfoPostEstimates',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('monthly_profit', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Profit')),
                ('cost', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('monthly_views', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Info Post Estimates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNormalImage',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('alt_tag', models.CharField(max_length=50, verbose_name='Alt Tag')),
                ('caption', models.TextField(max_length=100, verbose_name='Caption')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Normal Image',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNormalLink',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('follow', models.CharField(choices=[('NF', 'No Follow'), ('DF', 'Do Follow')], max_length=10, verbose_name='Follow')),
                ('link', models.URLField(max_length=500, verbose_name='Link')),
                ('anchor_text', models.CharField(max_length=30, verbose_name='Anchor Text')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Normal Link',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReviewPost',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Review Post',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalReviewPostEstimates',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('monthly_profit', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Profit')),
                ('cost', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('monthly_views', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Review Post Estimates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Tag',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTopMoneyPost',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Top Money Post',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTopMoneyPostEstimates',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('monthly_profit', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Profit')),
                ('cost', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('monthly_views', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical Top Money Post Estimates',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='InfoPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Info Post',
                'verbose_name_plural': 'Info Posts',
            },
        ),
        migrations.CreateModel(
            name='InfoPostEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('monthly_profit', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Profit')),
                ('cost', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('monthly_views', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
            ],
            options={
                'verbose_name': 'Info Post Estimates',
                'verbose_name_plural': 'Info Post Estimates',
            },
        ),
        migrations.CreateModel(
            name='NormalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_tag', models.CharField(max_length=50, verbose_name='Alt Tag')),
                ('caption', models.TextField(max_length=100, verbose_name='Caption')),
            ],
            options={
                'verbose_name': 'Normal Image',
                'verbose_name_plural': 'Normal Images',
            },
        ),
        migrations.CreateModel(
            name='NormalLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('follow', models.CharField(choices=[('NF', 'No Follow'), ('DF', 'Do Follow')], max_length=10, verbose_name='Follow')),
                ('link', models.URLField(max_length=500, verbose_name='Link')),
                ('anchor_text', models.CharField(max_length=30, verbose_name='Anchor Text')),
            ],
            options={
                'verbose_name': 'Normal Link',
                'verbose_name_plural': 'Normal Links',
            },
        ),
        migrations.CreateModel(
            name='ReviewPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Review Post',
                'verbose_name_plural': 'Review Posts',
            },
        ),
        migrations.CreateModel(
            name='ReviewPostEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('monthly_profit', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Profit')),
                ('cost', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('monthly_views', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
            ],
            options={
                'verbose_name': 'Review Post Estimates',
                'verbose_name_plural': 'Review Post Estimates',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TopMoneyPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Top Money Post',
                'verbose_name_plural': 'Top Money Posts',
            },
        ),
        migrations.CreateModel(
            name='TopMoneyPostEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('monthly_profit', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Profit')),
                ('cost', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(0)], verbose_name='Cost')),
                ('monthly_views', models.IntegerField(null=True, validators=[django.core.validators.MaxValueValidator(1000000), django.core.validators.MinValueValidator(0)], verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
            ],
            options={
                'verbose_name': 'Top Money Post Estimates',
                'verbose_name_plural': 'Top Money Post Estimates',
            },
        ),
    ]
