# Generated by Django 3.1.5 on 2021-01-21 03:55

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AffiliateImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_tag', models.CharField(max_length=50, verbose_name='Alt Tag')),
                ('caption', models.TextField(max_length=100, verbose_name='Caption')),
            ],
            options={
                'verbose_name': 'Image Mixin',
                'verbose_name_plural': 'Image Mixins',
                'ordering': ['alt_tag'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AffiliateLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow', models.CharField(max_length=10, verbose_name='Follow')),
                ('link', models.URLField(max_length=500, verbose_name='Link')),
                ('anchor_text', models.CharField(max_length=30, verbose_name='Link')),
                ('affiliate_tag', models.CharField(max_length=20, verbose_name='Affiliate Tag')),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
                'ordering': ['anchor_text'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AffiliateProgram',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliateprogram_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliateprogram_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Affiliate Program',
                'verbose_name_plural': 'Affiliate Programs',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InfoPostEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('profit', models.IntegerField(verbose_name='Profit')),
                ('cost', models.IntegerField(verbose_name='Cost')),
                ('monthly_views', models.IntegerField(verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
            ],
            options={
                'verbose_name': 'Info Post Estimates',
                'verbose_name_plural': 'Info Post Estimates',
            },
        ),
        migrations.CreateModel(
            name='NormalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_tag', models.CharField(max_length=50, verbose_name='Alt Tag')),
                ('caption', models.TextField(max_length=100, verbose_name='Caption')),
            ],
            options={
                'verbose_name': 'Image Mixin',
                'verbose_name_plural': 'Image Mixins',
                'ordering': ['alt_tag'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NormalLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('follow', models.CharField(max_length=10, verbose_name='Follow')),
                ('link', models.URLField(max_length=500, verbose_name='Link')),
                ('anchor_text', models.CharField(max_length=30, verbose_name='Link')),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
                'ordering': ['anchor_text'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReviewPostEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('profit', models.IntegerField(verbose_name='Profit')),
                ('cost', models.IntegerField(verbose_name='Cost')),
                ('monthly_views', models.IntegerField(verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
            ],
            options={
                'verbose_name': 'Review Post Estimates',
                'verbose_name_plural': 'Review Post Estimates',
            },
        ),
        migrations.CreateModel(
            name='TopMoneyPostEstimates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('profit', models.IntegerField(verbose_name='Profit')),
                ('cost', models.IntegerField(verbose_name='Cost')),
                ('monthly_views', models.IntegerField(verbose_name='Monthly Views')),
                ('rank_difficulty', models.IntegerField(validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(1)], verbose_name='Rank Difficulty')),
            ],
            options={
                'verbose_name': 'Top Money Post Estimates',
                'verbose_name_plural': 'Top Money Post Estimates',
            },
        ),
        migrations.CreateModel(
            name='TopMoneyPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
                ('affiliate_program', models.ManyToManyField(to='blog.AffiliateProgram', verbose_name='Affiliate Program')),
                ('category', models.ManyToManyField(to='blog.Category', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topmoneypost_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topmoneypost_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Top Money Post',
                'verbose_name_plural': 'Top Money Posts',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('description', models.TextField(max_length=500, verbose_name='Description')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.category', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tag_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReviewPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
                ('affiliate_program', models.ManyToManyField(to='blog.AffiliateProgram', verbose_name='Affiliate Program')),
                ('category', models.ManyToManyField(to='blog.Category', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewpost_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewpost_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Review Post',
                'verbose_name_plural': 'Review Posts',
            },
        ),
        migrations.CreateModel(
            name='InfoPost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('date_updated', models.DateTimeField(auto_now=True, verbose_name='Date Updated')),
                ('title', models.CharField(max_length=50, verbose_name='Title')),
                ('h1', models.CharField(max_length=50, verbose_name='H1 Tag')),
                ('meta', models.CharField(max_length=250, verbose_name='Meta Tag')),
                ('conclusion', tinymce.models.HTMLField(verbose_name='Conclusion')),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(3000), django.core.validators.MinValueValidator(2020)], verbose_name='Year')),
                ('status', models.CharField(choices=[('D', 'Draft'), ('H', 'Hidden'), ('P', 'Published')], max_length=1, verbose_name='Status')),
                ('category', models.ManyToManyField(to='blog.Category', verbose_name='Category')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='infopost_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='infopost_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated By')),
            ],
            options={
                'verbose_name': 'Info Post',
                'verbose_name_plural': 'Info Posts',
            },
        ),
        migrations.CreateModel(
            name='AffiliateProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('content', tinymce.models.HTMLField()),
                ('sku_asin', models.CharField(max_length=50, verbose_name='Sku or Asin')),
                ('price', models.DecimalField(decimal_places=2, max_digits=9, verbose_name='Price')),
                ('currency', models.CharField(default='USD', max_length=10, verbose_name='Currency')),
                ('brand', models.CharField(max_length=20, verbose_name='Brand')),
                ('manufacturer', models.CharField(max_length=20, verbose_name='Manufacturer')),
                ('available', models.BooleanField(default=True, verbose_name='Available')),
                ('affiliate_program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.affiliateprogram', verbose_name='Affiliate Program')),
                ('link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.affiliatelink', verbose_name='Link')),
            ],
            options={
                'verbose_name': 'Product Mixin',
                'verbose_name_plural': 'Product Mixins',
                'ordering': ['title'],
                'abstract': False,
            },
        ),
    ]
